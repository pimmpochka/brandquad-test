{
	"info": {
		"_postman_id": "b92d230e-d1e4-471a-b0de-9765dbb3b2b1",
		"name": "Go Rest API",
		"description": "Тестируемый проект - [https://github.com/adityaaw/go-rest-api](https://github.com/adityaaw/go-rest-api)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32614637"
	},
	"item": [
		{
			"name": "Получение продуктов",
			"item": [
				{
					"name": "✅ Позитивные",
					"item": [
						{
							"name": "Запрос на получение продуктов возвращает 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Запрос возвращает 200\", function() {\r",
											"    pm.response.to.have.status(200)\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8010/api/products",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8010",
									"path": [
										"api",
										"products"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Добавление продукта",
			"item": [
				{
					"name": "❌ Негативные",
					"item": [
						{
							"name": "Не правильный формат данных",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Запрос возвращает 400\", function() {\r",
											"    pm.response.to.have.status(400)\r",
											"})\r",
											"\r",
											"pm.test(\"В теле запроса есть описание ошибки\", function() {\r",
											"   const data = pm.response.json()\r",
											"\r",
											"   pm.expect(data.error).to.eql(\"Invalid request payload\")\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8010/api/product",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8010",
									"path": [
										"api",
										"product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Если имя продукта не указанно получаем 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Запрос возвращает 400\", function() {\r",
											"    pm.response.to.have.status(400)\r",
											"})\r",
											"\r",
											"pm.test(\"В теле запроса есть цена\", function() {\r",
											"   const data = pm.response.json()\r",
											"\r",
											"   pm.expect(data.error).to.eql(\"Invalid request payload\")\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"price\" : 10.1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8010/api/product",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8010",
									"path": [
										"api",
										"product"
									]
								}
							},
							"response": []
						},
						{
							"name": "Если не указана цена продукта получаем 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Запрос возвращает 400\", function() {\r",
											"    pm.response.to.have.status(400)\r",
											"})\r",
											"\r",
											"pm.test(\"В теле запроса есть цена\", function() {\r",
											"   const data = pm.response.json()\r",
											"\r",
											"   pm.expect(data.error).to.eql(\"Invalid request payload\")\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\" : \"Продукт 1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8010/api/product",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8010",
									"path": [
										"api",
										"product"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "✅ Позитивные",
					"item": [
						{
							"name": "Имя продукта и цена проставляются верно",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Запрос возвращает 201\", function() {\r",
											"    pm.response.to.have.status(201)\r",
											"})\r",
											"\r",
											"pm.test(\"В теле запроса есть цена\", function() {\r",
											"   const data = pm.response.json()\r",
											"\r",
											"   pm.expect(data.price).to.eql(10.1)\r",
											"   pm.expect(data.name).to.eql('Продукт 1')\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\" : \"Продукт 1\",\r\n    \"price\" : 10.1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8010/api/product",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8010",
									"path": [
										"api",
										"product"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Не правильный формат данных",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Запрос возвращает 400\", function() {\r",
									"    pm.response.to.have.status(400)\r",
									"})\r",
									"\r",
									"pm.test(\"В теле запроса есть описание ошибки\", function() {\r",
									"   const data = pm.response.json()\r",
									"\r",
									"   pm.expect(data.error).to.eql(\"Invalid request payload\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8010/api/product",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8010",
							"path": [
								"api",
								"product"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Получение продукта",
			"item": [
				{
					"name": "❌ Негативные",
					"item": [
						{
							"name": "Получение не существующего продукта вернет 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Запрос возвращает 404\", function() {\r",
											"    pm.response.to.have.status(404)\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8010/api/product/100",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8010",
									"path": [
										"api",
										"product",
										"100"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "✅ Позитивные",
					"item": [
						{
							"name": "Получение существующего продукта возвращает 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Запрос возвращает 200\", function() {\r",
											"    pm.response.to.have.status(200)\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8010/api/product/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8010",
									"path": [
										"api",
										"product",
										"1"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Удаление продукта",
			"item": [
				{
					"name": "✅ Позитивные",
					"item": [
						{
							"name": "Удаление существующего продукта вернет 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Запрос возвращает 200\", function() {\r",
											"    pm.response.to.have.status(200)\r",
											"})\r",
											"\r",
											"pm.test(\"В теле запроса есть результат\", function() {\r",
											"   const data = pm.response.json()\r",
											"\r",
											"   pm.expect(data.result).to.eql(\"success\")\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8010/api/product/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8010",
									"path": [
										"api",
										"product",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Удаление не существующего продукта вернет 200 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Запрос возвращает 200\", function() {\r",
											"    pm.response.to.have.status(200)\r",
											"})\r",
											"\r",
											"pm.test(\"В теле запроса есть результат\", function() {\r",
											"   const data = pm.response.json()\r",
											"\r",
											"   pm.expect(data.result).to.eql(\"success\")\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8010/api/product/100",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8010",
									"path": [
										"api",
										"product",
										"100"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Обновление продукта",
			"item": [
				{
					"name": "✅ Позитивные",
					"item": [
						{
							"name": "Обновление данных продукта вернет 200",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Запрос возвращает 200\", function() {\r",
											"    pm.response.to.have.status(200)\r",
											"})\r",
											"\r",
											"pm.test(\"В теле запроса обновленная цена\", function() {\r",
											"   const data = pm.response.json()\r",
											"\r",
											"   pm.expect(data.price).to.eql(11)\r",
											"   pm.expect(data.name).to.eql(\"Продукт 2\")\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\" : \"Продукт 2\",\r\n    \"price\" : 11\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8010/api/product/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8010",
									"path": [
										"api",
										"product",
										"2"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "❌ Негативные",
					"item": [
						{
							"name": "При обновление не существующего объекта должно вернуться 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Запрос возвращает 200\", function() {\r",
											"    pm.response.to.have.status(404)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\" : \"Продукт 2\",\r\n    \"price\" : 11\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8010/api/product/333",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8010",
									"path": [
										"api",
										"product",
										"333"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}